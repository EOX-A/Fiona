# (generated with --quick)

import fiona.model
import functools
import json
import math
import warnings
from typing import Any, Generator, Type, TypeVar, Union

Geometry: Type[fiona.model.Geometry]
munchify: Any
partial: Type[functools.partial]

_T0 = TypeVar('_T0')

def eval_feature_expression(feature, expression) -> Any: ...
def id_record(rec: _T0) -> _T0: ...
def make_ld_context(context_items) -> dict: ...
def nullable(val, cast) -> Any: ...
def obj_gen(lines, object_hook = ...) -> Generator[Any, Any, None]: ...
def recursive_round(obj: _T0, precision) -> Union[float, list, fiona.model.Geometry, _T0]: ...
def to_dict(val) -> Any: ...
